■オブジェクト指向
    個々のプログラムの集合体という考え方
    個々のプログラムをオブジェクト(モノ)と捉え、オブジェクトを組み立てて一つのオブジェクト(モノ)として動かす考え方
  メリット
    プログラミングの全体像を把握しやすい
    分業や共同作業がやりやすい
    改良や修正がやりやすい
    同じようなモノを作りやすい


■バッチ処理
    Batch = 一束、一群、一団という意味
    一定量の(あるいは一定期間の)データを集め、一括処理するための処理方法
  メリット
    自動化できる
    忙しく無いときに実行できる


■コンパイル
    プログラミング言語で書かれた文字列（ソースコード）を、コンピュータ上で実行可能な形式（オブジェクトコード）に変換すること
    コンピュータ上で実行される命令は機械語、人間には意味をとらえにくいため、機械語でプログラムを作成するのは困難。このため、人間の言葉の表現により近いプログラミング言語（高水準言語）でプログラムを記述し、その後、コンパイルにより機械語に変換する


■カバレッジ
    カバレッジ（網羅率）
    モノや範囲に対して全体の内どれくらいをカバーできているかを表すための指標
  テストカバレッジ
    完成したソフトウェア・プログラムをテストする際に、全体の仕様に対して実際にテストが行えている範囲をテストカバレッジと言う
    単体テスト時に用いられることが多く、実際のソースコード全体に対してどれだけのコードを実行できたかを網羅性の尺度とする


■プラットホーム
    プラットフォーム（platform）
    サービスやシステム、ソフトウェアを提供・カスタマイズ・運営するために必要な「共通の土台（基盤）となる標準環境」を指す
  例えば
    パソコンでは、ソフトウェアを動かすためのプラットフォームは
    WindowsやMac OS、UNIX、LINUXといったOS（オペレーションシステム）を指す