■バージョン管理
    システムの変更を管理するもの
    システム開発などで特に重要なバージョン管理を補助するためのソフトウェア
    複数人で作業を進める上で全体の作業効率を向上する
    ファイルの共有、ファイルの同期、ファイルのバックアップ


■集中型
    CVS(Concurrent Versions System)・Subversionなど
    一つのリポジトリに接続してみんなで使う
    だれでもサーバからファイルのコピーを取得して作業ができる
    変更した内容はサーバにある内容に反映(コミット)できる
    デメリットとして，オフラインの状態では最新のファイルをリポジトリに取得・反映することができない
    常に中央にあるリポジトリと同期して、自分の変更を他のユーザが取得できるようにしておく
  CVS
    ファイルの変更履歴を管理してくれるシステムのひとつ

■分散型
    Git・Mercurialなど
    各自パソコン上にリポジトリを持ち好きなタイミングで同期する
    主となるサーバは持っていない
    だれもが独立したリポジトリを用意して，他のリポジトリと同期することができる


■Github
    各々が公開用のプログラムをアップして自分以外のエンジニアに共有
    履歴を残しながら更新したり、自分以外のエンジニアも修正を加えることが可能


■Backlog
    GitやSubversionのリポジトリ機能を備えている
    コミットするたびに、どのファイルをいつ、誰が編集してコミットしたかを自動記録


■SourceTree
    Gitを効率的に扱うGUIツール
  メリット
    無料で使用できる
    MacとWindowsの両方に対応
    日本語に対応している
    直感的に操作できる
    全体の作業を可視化できる
  デメリット
    コマンドで操作するより遅くなる
    詳細な操作はコマンドの方がしやすい


■Tortoise SVN （トータスエスブイエヌ）
    クライアント/サーバ型の集中型バージョン管理システム
    Subversionのクライアントフロントエンド（各種入力をユーザーから受け取り、バックエンドが使える仕様に合うようにそれを加工する役目を担う）となるソフトウェア

    バージョン管理システムであるSubversionのクライアントフロントエンド
    GNU General Public Licenseのもとに配布されているフリーソフトウェア


■Git Flow
    プラグイン(ツール)のこと
    Gitを最大限に活用するための開発手法でもあり、ツールでもある
    役割ごとにブランチを使い分ける

  ・master
      ④リリースしたデータを置いておくブランチ
        masterブランチにタグをつけます
        masterへマージ
  
  ・release
      ③リリース前に準備、微調整をおこなうブランチ
        developブランチからreleaseブランチを作成する

  ・hot-fix
      ⑥リリースされているデータに、緊急の修正対応をするためのブランチ
        リース後に深刻なバグが見つかった場合、masterブランチからhot-fixブランチを作成し、その中でバグ対応をおこなう
        masterにタグをつける

  ・develop
      ①開発をおこなうためのブランチ
        1つのタスクごとにdevelopからfeatureブランチを作成し、featureブランチで作業を進めます

    ・feature
        ②開発をおこなうためのブランチで、個々の機能の実装やバグの 解決をおこなう
          developにマージする